{"version":3,"sources":["globalStyle.ts","Row.tsx","Posts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Device","GlobalStyle","createGlobalStyle","normalize","Container","styled","article","Box","a","Fav","div","Row","ref","data","favorite","onFav","units","unit","ms","relativeTimeFromElapsed","elapsed","Math","abs","Intl","RelativeTimeFormat","numeric","format","round","created_at","author","story_title","story_url","href","target","src","alt","relative","pivot","Date","getTime","relativeTimeFromDates","onClick","section","props","favView","css","Filter","Loading","Posts","useState","localStorage","getItem","query","setQuery","page","setPage","objectID","posts","setPosts","JSON","parse","stringify","favorites","setFavorites","loader","useRef","loadPosts","useCallback","fetch","then","response","json","hits","filter","post","index","findIndex","item","catch","error","console","handleObserver","entries","isIntersecting","handleFavorite","some","useEffect","setItem","current","IntersectionObserver","root","rootMargin","threshold","observe","sort","b","localeCompare","map","value","onChange","event","persist","i","Main","main","Header","nav","Switcher","Button","button","active","App","setFavView","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.084ed190.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const Device = {\n    laptop: `(min-width: 1024px)`,\n    desktop: `(min-width: 1440px)`,\n};\n\nconst GlobalStyle = createGlobalStyle`\n    ${normalize}\n\n    *,\n    *::before,\n    *::after {\n        box-sizing: border-box;\n    }\n\n    #root, html, body {\n        height: 100vh;\n    }\n\n    html {\n        font-size: 16px;\n\t    scroll-behavior: smooth;\n    }\n\n    p,\n    h1,\n    label {\n        display: inline-block;\n        margin: 0;\n    }\n    \n    body {\n        background: #fcfcfc;\n        font-family: Roboto;\n        font-size: 14px;\n        line-height: 1.57;\n        color: rgba(0, 0, 0, 0.65);\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-rendering: optimizeLegibility;\n        font-feature-settings: \"kern\" 1;\n        font-kerning: normal;\n    }\n\n    p {\n        line-height: 1.43;\n        letter-spacing: 0.25px;\n        color: #6b6b6b;\n    }\n\n    b {\n        font-weight: 500;\n    }\n\n    h1 {\n        font-family: Baskerville;\n        font-size: 28px;\n        font-weight: normal;\n        line-height: 1;\n        color: #3b3b3b;\n    }\n\n    label {\n        font-size: 11px;\n        color: #767676;\n    }\n\n    select {\n        min-width: 15rem;\n        padding: 0.25rem 0.75rem;\n        border-radius: 4px;\n        border: solid 1px #2e2e2e;\n        background-color: #ffffff;\n        color: #343434;\n    }\n\n    select:hover {\n        cursor: pointer;\n    }\n\n    select:focus {\n        outline: none;\n    }\n\n    button {\n        padding: 3px 39px 0 40px;\n        background: #fcfcfc;\n        border: solid 1px #d6d6d6;\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 1.75;\n        text-align: center;\n        color: #6a6a6a;\n        will-change: opacity;\n        transition: 0.15s ease-in-out;\n    }\n\n    button:hover {\n        cursor: pointer;\n    }\n`;\n\nexport default GlobalStyle;\n","import { ForwardedRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Device } from \"./globalStyle\";\n\nconst Container = styled.article`\n    overflow: hidden;\n    min-height: 6.5rem;\n    max-width: 40rem;\n    border-radius: 6px;\n    border: solid 1px #979797;\n    background-color: #ffffff;\n    text-align: left;\n    display: grid;\n    align-items: center;\n    grid-template-columns: 1fr auto;\n    transition: 0.15s ease-in-out;\n    will-change: opacity;\n\n    &:hover {\n        cursor: pointer;\n        opacity: 0.7;\n    }\n\n    @media ${Device.laptop} {\n        max-width: 35rem;\n    }\n`;\n\nconst Box = styled.a`\n    text-decoration: none;\n    padding: 1rem 1.5rem;\n    display: grid;\n    gap: 0.5rem;\n\n    label {\n        pointer-events: none;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n`;\n\nconst Fav = styled.div`\n    height: 100%;\n    padding: 1rem 1.5rem;\n    background-color: #f5f5f5;\n    display: flex;\n    align-items: center;\n\n    img {\n        height: 1.5rem;\n        transition: 0.15s ease-in-out;\n    }\n\n    &:hover {\n        cursor: pointer;\n\n        img {\n            transform: scale(1.1);\n        }\n    }\n`;\n\ntype RowProps = {\n    ref?: ForwardedRef<HTMLDivElement> | null;\n    data: {\n        created_at: string;\n        author: string;\n        objectID: number;\n        story_title: string;\n        story_url: string;\n    };\n    favorite: boolean;\n    onFav: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nfunction Row({ ref, data, favorite, onFav }: RowProps) {\n    const units: { unit: Intl.RelativeTimeFormatUnit; ms: number }[] = [\n        { unit: \"year\", ms: 31536000000 },\n        { unit: \"month\", ms: 2628000000 },\n        { unit: \"day\", ms: 86400000 },\n        { unit: \"hour\", ms: 3600000 },\n        { unit: \"minute\", ms: 60000 },\n        { unit: \"second\", ms: 1000 },\n    ];\n\n    function relativeTimeFromElapsed(elapsed: number): string {\n        for (const { unit, ms } of units) {\n            if (Math.abs(elapsed) >= ms || unit === \"second\") {\n                return new Intl.RelativeTimeFormat(\"en\", {\n                    numeric: \"auto\",\n                }).format(Math.round(elapsed / ms), unit);\n            }\n        }\n        return \"\";\n    }\n\n    function relativeTimeFromDates(\n        relative: Date | null,\n        pivot: Date = new Date()\n    ): string {\n        if (!relative) return \"\";\n        const elapsed = relative.getTime() - pivot.getTime();\n        return relativeTimeFromElapsed(elapsed);\n    }\n\n    return (\n        <>\n            {data.created_at &&\n                data.author &&\n                data.story_title &&\n                data.story_url && (\n                    <Container ref={ref}>\n                        <Box href={data.story_url} target=\"_blank\">\n                            <label>\n                                <img src=\"img/iconmonstr-time-2.svg\" alt=\"\" />\n                                {relativeTimeFromDates(\n                                    new Date(data.created_at)\n                                )}{\" \"}\n                                by {data.author}\n                            </label>\n                            <p>\n                                <b>{data.story_title}</b>\n                            </p>\n                        </Box>\n                        <Fav onClick={onFav}>\n                            <img\n                                src={\n                                    favorite\n                                        ? \"img/iconmonstr-favorite-3.svg\"\n                                        : \"img/iconmonstr-favorite-2.svg\"\n                                }\n                                alt=\"favorite\"\n                            />\n                        </Fav>\n                    </Container>\n                )}\n        </>\n    );\n}\n\nexport default Row;\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Device } from \"./globalStyle\";\nimport Row from \"./Row\";\n\ntype Props = {\n    favView?: boolean;\n};\n\nconst Container = styled.section<Props>`\n    position: relative;\n    padding: 1.25rem 5vw;\n    display: grid;\n    align-content: start;\n    justify-content: center;\n    gap: 2rem;\n    transition: 0.15s ease-in-out;\n\n    ${(props) =>\n        props.favView &&\n        css`\n            padding: 5.5rem 5vw;\n        `};\n\n    @media ${Device.laptop} {\n        grid-template-columns: auto auto;\n    }\n`;\n\nconst Filter = styled.div`\n    width: 90vw;\n    max-width: 40rem;\n    padding-bottom: 0.5rem;\n\n    @media ${Device.laptop} {\n        grid-column-end: span 2;\n        max-width: 70rem;\n    }\n`;\n\nconst Loading = styled.div`\n    @keyframes loading {\n        0% {\n            opacity: 0.5;\n        }\n        50% {\n            opacity: 1;\n        }\n        100% {\n            opacity: 0.5;\n        }\n    }\n\n    padding: 2rem 0;\n    text-align: center;\n    animation-name: loading;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n\n    @media ${Device.laptop} {\n        grid-column-end: span 2;\n    }\n`;\n\ntype PostsProps = {\n    favView: boolean;\n};\n\nfunction Posts({ favView }: PostsProps) {\n    const [query, setQuery] = useState(\n        localStorage.getItem(\"query\") || \"reactjs\"\n    );\n    const [page, setPage] = useState(0);\n\n    const [posts, setPosts] = useState([\n        {\n            created_at: \"\",\n            author: \"\",\n            objectID: 0,\n            story_title: \"\",\n            story_url: \"\",\n        },\n    ]);\n    const [favorites, setFavorites] = useState(\n        JSON.parse(\n            localStorage.getItem(\"favorites\") ||\n                JSON.stringify([\n                    {\n                        created_at: \"\",\n                        author: \"\",\n                        objectID: 0,\n                        story_title: \"\",\n                        story_url: \"\",\n                    },\n                ])\n        )\n    );\n\n    const loader = useRef<HTMLDivElement | null>(null);\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        event.persist();\n        setQuery(event.target.value);\n    };\n\n    const loadPosts = useCallback(() => {\n        fetch(\n            `https://hn.algolia.com/api/v1/search_by_date?query=${query}&page=${page}`\n        )\n            .then((response) => response.json())\n            .then((json) => {\n                setPosts((posts) => [\n                    ...posts,\n                    //remove duplicates\n                    ...json.hits.filter(\n                        (post: { story_title: string }, index: number) => {\n                            return (\n                                json.hits.findIndex(\n                                    (item: { story_title: string }) =>\n                                        item.story_title === post.story_title\n                                ) === index\n                            );\n                        }\n                    ),\n                ]);\n                setPage((page) => page + 1);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, [query, page]);\n\n    const handleObserver = useCallback(\n        (entries) => {\n            const target = entries[0];\n            if (target.isIntersecting) {\n                loadPosts();\n            }\n        },\n        [loadPosts]\n    );\n\n    const handleFavorite = (post: {\n        created_at: string;\n        author: string;\n        objectID: number;\n        story_title: string;\n        story_url: string;\n    }) => {\n        favorites.some(\n            (item: { objectID: number }) => item.objectID === post.objectID\n        )\n            ? setFavorites(\n                  favorites.filter(\n                      (item: { objectID: number }) =>\n                          item.objectID !== post.objectID\n                  )\n              )\n            : setFavorites([...favorites, post]);\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"query\", query);\n        setPosts([\n            {\n                created_at: \"\",\n                author: \"\",\n                objectID: 0,\n                story_title: \"\",\n                story_url: \"\",\n            },\n        ]);\n        setPage(0);\n    }, [query]);\n\n    useEffect(() => {\n        const option = {\n            root: null,\n            rootMargin: \"20px\",\n            threshold: 0,\n        };\n        loader.current &&\n            new IntersectionObserver(handleObserver, option).observe(\n                loader.current\n            );\n    }, [handleObserver]);\n\n    useEffect(() => {\n        localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    }, [favorites]);\n\n    return (\n        <Container favView={favView}>\n            {!favView ? (\n                <>\n                    <Filter>\n                        <select value={query} onChange={handleInputChange}>\n                            <option value=\"angular\">Angular</option>\n                            <option value=\"reactjs\">Reactjs</option>\n                            <option value=\"vuejs\">Vuejs</option>\n                        </select>\n                    </Filter>\n                    {posts.map(\n                        (\n                            post: {\n                                created_at: string;\n                                author: string;\n                                objectID: number;\n                                story_title: string;\n                                story_url: string;\n                            },\n                            index\n                        ) => (\n                            <Row\n                                key={index}\n                                data={post}\n                                favorite={\n                                    favorites.some(\n                                        (i: { objectID: number }) =>\n                                            i.objectID === post.objectID\n                                    )\n                                        ? true\n                                        : false\n                                }\n                                onFav={() => handleFavorite(post)}\n                            />\n                        )\n                    )}\n                    <Loading ref={loader}>Loading...</Loading>\n                </>\n            ) : (\n                <>\n                    {!favorites[0] ? (\n                        <div>No faves yet.</div>\n                    ) : (\n                        favorites\n                            .sort(function (\n                                a: {\n                                    created_at: string;\n                                },\n                                b: {\n                                    created_at: string;\n                                }\n                            ) {\n                                return b.created_at.localeCompare(a.created_at);\n                            })\n                            .map(\n                                (post: {\n                                    created_at: string;\n                                    author: string;\n                                    objectID: number;\n                                    story_title: string;\n                                    story_url: string;\n                                }) => (\n                                    <Row\n                                        key={post.objectID}\n                                        data={post}\n                                        favorite={true}\n                                        onFav={() => handleFavorite(post)}\n                                    />\n                                )\n                            )\n                    )}\n                </>\n            )}\n        </Container>\n    );\n}\n\nexport default Posts;\n","import { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport GlobalStyle, { Device } from \"./globalStyle\";\nimport Posts from \"./Posts\";\n\nconst Main = styled.main`\n    width: 100vw;\n    height: 100vh;\n    overflow-y: scroll;\n`;\n\nconst Header = styled.nav`\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    width: 100%;\n    padding: 2.75rem 5vw;\n    margin-bottom: 1.5rem;\n    box-shadow: 0 1px 4px 0 rgba(0, 21, 41, 0.12);\n    background-image: linear-gradient(to bottom, #ececec -32%, #ffffff 124%);\n    text-align: center;\n\n    h1 {\n        text-align: left;\n        width: 100%;\n        max-width: 40rem;\n\n        @media ${Device.laptop} {\n            max-width: 72rem;\n        }\n    }\n`;\n\nconst Switcher = styled.div`\n    position: sticky;\n    top: 6rem;\n    z-index: 110;\n    width: 100%;\n    padding: 2.75rem 0;\n    text-align: center;\n\n    @media ${Device.laptop} {\n        top: 0;\n    }\n`;\n\ntype ButtonProps = {\n    active?: boolean;\n};\n\nconst Button = styled.button<ButtonProps>`\n    ${(props) =>\n        props.active &&\n        css`\n            border: solid 1px #1797ff;\n            color: #1797ff;\n        `};\n\n    &:first-child {\n        border-radius: 2px 0 0 2px;\n        border-right: none;\n    }\n\n    &:last-child {\n        border-radius: 0 2px 2px 0;\n    }\n`;\n\nfunction App() {\n    const [favView, setFavView] = useState(false);\n\n    return (\n        <>\n            <GlobalStyle />\n            <Main>\n                <Header>\n                    <h1>HACKER NEWS</h1>\n                </Header>\n                <Switcher>\n                    <Button\n                        type=\"button\"\n                        active={!favView}\n                        onClick={() => setFavView(false)}\n                    >\n                        All\n                    </Button>\n                    <Button\n                        type=\"button\"\n                        active={favView}\n                        onClick={() => setFavView(true)}\n                    >\n                        My faves\n                    </Button>\n                </Switcher>\n                <Posts favView={favView} />\n            </Main>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}